[{"C:\\Users\\nishu\\Desktop\\frontend\\src\\index.js":"1","C:\\Users\\nishu\\Desktop\\frontend\\src\\App.js":"2","C:\\Users\\nishu\\Desktop\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\nishu\\Desktop\\frontend\\src\\home.js":"4"},{"size":500,"mtime":1654701384712,"results":"5","hashOfConfig":"6"},{"size":105,"mtime":1654699180329,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1654701384727,"results":"8","hashOfConfig":"6"},{"size":11180,"mtime":1655909260964,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x427cc",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\nishu\\Desktop\\frontend\\src\\index.js",[],"C:\\Users\\nishu\\Desktop\\frontend\\src\\App.js",[],"C:\\Users\\nishu\\Desktop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\nishu\\Desktop\\frontend\\src\\home.js",["19"],"import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport image1 from \"./bg.png\";\r\nimport image from \"./BLkE.gif\";\r\nimport image2 from \"./IrM.gif\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff7a',\r\n    },\r\n  },\r\n}))(Button);\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  Typography: {\r\n    fontFamily: \"Bebas Neue\",\r\n    fontStyle: 'bold',\r\n  },\r\n  Typography1: {\r\n    fontStyle: 'italic',\r\n    color: 'white',\r\n  },\r\n  tool: {\r\n    backgroundImage: `url(${image2})`,\r\n    justifyContent:\"center\",\r\n    display:\"flex\",\r\n  },\r\n  tool1: {\r\n    backgroundImage: `url(${image1})`,\r\n    justifyContent:\"center\",\r\n    display:\"flex\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 270,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"216px\",\r\n    width: \"100%\",\r\n  }, \r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: `url(${image1})`,\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  }\r\n}));\r\n\r\n\r\nexport const AudioUpload = () => {\r\n  const classes = useStyles();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [audio, setAudio] = useState();\r\n  let confidence_g = 0;\r\n  let confidence_e = 0;\r\n  let confidence_a = 0;\r\n\r\n  const sendFile = async () => {\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", audio);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: process.env.REACT_APP_API_URL,\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n      }\r\n      setIsloading(false);\r\n    }\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setAudio(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!audio) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(audio)\r\n    setPreview(objectUrl) \r\n  }, [audio]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n  }, [preview]);\r\n\r\n  const addFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setAudio(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    if (files[0]) {\r\n      setAudio(files[0]);\r\n      setData(undefined);\r\n      setImage(true);\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    confidence_g = (parseFloat(data.confidence_g) * 100).toFixed(2);\r\n    confidence_e = (parseFloat(data.confidence_e) * 100).toFixed(2);\r\n    confidence_a = (parseFloat(data.confidence_a) * 100).toFixed(2);\r\n  }\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar className={classes.tool1}>\r\n          <Typography className={classes.Typography} align=\"center\"  variant ='h5' >\r\n            AUDIO ANALYTICS: DETERMINE GENDER, AGE AND EMOTION\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar className={classes.tool}>\r\n        <Typography className={classes.Typography1} align = \"center\"  >\r\n          This Model will determine the gender, age and emotion of a person by analysing the audio.\r\n          The audio file should be in .wav format.   \r\n        </Typography>\r\n      </Toolbar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {!image && <CardContent className={classes.content}>\r\n              <DropzoneArea\r\n                acceptedFiles={['audio/*']}\r\n                dropzoneText={\"Drag and drop an audio file to process\"}\r\n                onChange={addFile}\r\n              />\r\n              </CardContent>}\r\n              {data  && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <TableRow align = \"center\" className={classes.ReactAudioPlayer}>\r\n                    <ReactAudioPlayer \r\n                      src = {URL.createObjectURL(audio)}\r\n                      autoPlay\r\n                      controls\r\n                    />\r\n                  </TableRow>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Gender:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>                     \r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.Gender}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence_g}%</TableCell>        \r\n                      </TableRow>            \r\n                    </TableBody>\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Emotion:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>                     \r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.Emotion}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence_e}%</TableCell>        \r\n                      </TableRow>            \r\n                    </TableBody>\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Age:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>                     \r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.AGE}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence_a}%</TableCell>        \r\n                      </TableRow>            \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n        </Grid >\r\n      </Container >\r\n    </React.Fragment >\r\n  );\r\n};\r\n",{"ruleId":"20","severity":1,"message":"21","line":209,"column":6,"nodeType":"22","endLine":209,"endColumn":15,"suggestions":"23"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendFile'. Either include it or remove the dependency array.","ArrayExpression",["24"],{"desc":"25","fix":"26"},"Update the dependencies array to be: [preview, sendFile]",{"range":"27","text":"28"},[5132,5141],"[preview, sendFile]"]